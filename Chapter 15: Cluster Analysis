#computing distance between records
utilities.df<- read.csv("Utilities.csv")

#set row names to utilities column
row.names(utilities.df) <- utilities.df[,1]

#remove utility columnn
utilities.df<-utilities.df[,-1]

#compute Euclidean distance
d<- dist(utilities.df, method = "euclidean")

#normalizing the data then finding distance
utilities.df.norm<- sapply(utilities.df, scale)

#add row names
row.names(utilities.df.norm)<-row.names(utilities.df)

#compute normalized distance based on the Sales and Fuel Cost
d.norm<- dist(utilities.df.norm[,c(6,8)], method = "euclidean")


#compute based on all 8 ariables
d.norm<- dist(utilities.df.norm, method = "euclidean")
#code for running hierarchial clustering and generating a dendrogram
#in hclust() set argument method = to "ward.D", "single", "complete", "average", "median", or "centroid"
hc1<-hclust(d.norm, method = "single")
plot(hc1, hang = -1, ann = FALSE)
hc2<- hclust(d.norm, method= "average")
plot(hc2, hang = -1, ann = FALSE)

#"cutting" the diagram
#single linkage
memb<- cutree(hc1, k=6)
memb

#average linkage
memb<- cutree(hc2, k=6)
memb

#creating a heatmap
#set labels as cluster membership and utility name
row.names(utilities.df.norm)<- paste(memb, ": ", row.names(utilities.df), sep = "")

#plot map
#rev() reversus the color mapping to large = dark
heatmap(as.matrix(utilities.df.norm), Colv = NA, hclustfun = hclust, col=rev(paste("gray",1:99, sep="")))


#k-means clustering
km<- kmeans(utilities.df.norm, 6)

#show cluster membership 
km$cluster

#cluster centroids and squared distances for k-means with k=6
# centroids
km$centers

# within-cluster sumof squares
km$withinss

#cluster size
km$size

#plotting profile plot of centroids
#make empty scatterplot
plot(c(0), xaxt = 'n', ylab = "", type = "l", ylim= c(min(km$centers), max(km$centers)), xlim=c(0,8))

#label x-axes
axis(1, at = c(1:8), labels = names(utilities.df))

#plot centroids
for (i in c(1:6))
  lines(km$centers[i,], lty = i, lwd = 2, col = ifelse(i %in% c(1,3,5), "black", "dark grey"))

#name clusters
text(x= 0.5, y= km$centers[,1], labels = paste("Cluster", c(1:6)))

##Euclidean distance between cluster centroids
dist(km$centers)
