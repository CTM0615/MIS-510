library(e1071)
delays.df<- read.csv("FlightDelays.csv")

#change numerical variables to catagorical
delays.df$DAY_WEEK<-factor(delays.df$DAY_WEEK)
delays.df$DEP_TIME<-factor(delays.df$DEP_TIME)

#create hourly bins for departure time
delays.df$CRS_DEP_TIME<- factor(round(delays.df$CRS_DEP_TIME/100))

#Create training and validation sets
selected.var<- c(10,1,8,4,2,13)
train.index<- sample(c(1:dim(delays.df)[1]), dim(delays.df)[1]*0.6)  
train.df<- delays.df[train.index, selected.var] 
valid.df<- delays.df[-train.index, selected.var]

#run naive bayes
delays.nb<- naiveBayes(Flight.Status ~ ., data = train.df) 
delays.nb 

#use prop.table() with margin = 1 to convert a count table to a proportionate table where each row sums to 1. Another way to get values
prop.table(table(train.df$Flight.Status, train.df$DEST), margin = 1) 


#predict probabilities
pred.prob<- predict(delays.nb, newdata = valid.df, type = "raw") 
#predict calss membership
pred.class<- predict(delays.nb, newdata = valid.df)

df<- data.frame(actual = valid.df$Flight.Status, predicted = pred.class, pred.prob)
df[valid.df$CARRIER == "DL" & valid.df$DAY_WEEK == 7 & valid.df$CRS_DEP_TIME == 10 & valid.df$DEST == "LGA" & valid.df$ORIGIN == "DCA",]

#confusion matrices for flight delay using Naive Bayes classifier
library(caret)
#training
pred.class<- predict(delays.nb, newdata = train.df)
confusionMatrix(pred.class, train.df$Flight.Status)

#validation
pred.class <- predict(delays.nb, newdata = valid.df)
confusionMatrix(pred.class, valid.df$Flight.Status)
