car.df <- read.csv("ToyotaCorolla.csv")
#selecting the first 1000 rows of data for use
car.df <- car.df[1:1000,]
#variables used for regression
selected.var <- c(3,4,7,8,9,10,12,13,14,17,18)

#partitioning the data
set.seed(1)
train.index <- sample(c(1:1000), 600)
train.df <- car.df[train.index, selected.var]
valid.df <- car.df[-train.index, selected.var]

#linear regression and using options to not get scientific notation
car.lm <- lm(Price ~ ., data = train.df)
options(scipen = 999)
summary(car.lm)


#forecasting the data
library(forecast)
car.lm.pred <- predict(car.lm, valid.df)
options(scipen=999, digits = 0)
some.residuals <- valid.df$Price[1:20] - car.lm.pred[1:20]
data.frame("Predicted" = car.lm.pred[1:20], "Actual" = valid.df$Price[1:20], "Residual" = some.residuals)


options(scipen=999, digits = 3)

#using accuracy() to compute common accuracy measures
accuracy(car.lm.pred, valid.df$Price)

#making a histogram of validation errors
car.lm.pred <- predict(car.lm, valid.df)
all.residuals <- valid.df$Price - car.lm.pred
length(all.residuals[which(all.residuals > -1392 & all.residuals < 1392)])/400
hist(all.residuals, breaks = 25, xlab = "Residuals", main="")                     


#code for best subset
library(leaps)
#create dummies
Fuel_Type<- as.data.frame(model.matrix(~0 + Fuel_Type, data = train.df))
#replace Fuel_Type with dummy
train.df<- cbind(train.df[,-4], Fuel_Type[,])
head(train.df)
search <- regsubsets(Price ~ ., data = train.df, nbest = 1, nvmax = dim(train.df)[2], method = "exhaustive")

sum<-summary(search)

#show models
sum$which

#show metrics
sum$rsq
sum$adjr2
sum$cp

#backward elimination for reducing predictors
car.lm.step <- step(car.lm, direction = "backward")
summary(car.lm.step)
car.lm.step.pred <- predict(car.lm.step)
accuracy(car.lm.step.pred, valid.df$Price)
